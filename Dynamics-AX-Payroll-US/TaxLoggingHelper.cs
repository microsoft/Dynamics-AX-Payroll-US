// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.

using System;
using System.IO;

namespace Microsoft.Dynamics.AX.Application.HumanCapitalManagement.Payroll
{
    /// <summary>
    /// Provides the ability to retrieve payroll tax engine logs.
    /// </summary>
    public class TaxLoggingHelper
    {
        const string logDirectoryPath = @"STE\Log\";
        const string logFileExtension = ".log";

        /// <summary>
        /// Provides access to the specified STE log generated by the tax engine.
        /// </summary>
        /// <param name="documentNumber">Specifies the document number corresponding to the
        /// tax engine log.</param>
        /// <returns>A <c>StreamReader</c> instance for the specified STE log file</returns>
        public static StreamReader GetTaxLogForPayStatementDocumentNumber(string documentNumber)
        {
            string fullPath = TaxLoggingHelper.BuildFilePathForLog(documentNumber);
            StreamReader reader;

            try
            {
                reader = new StreamReader(fullPath);
            }
            catch
            {
                // Return a null reader if there is any failure in opening the file
                reader = null;
            }

            return reader;                
        }

        /// <summary>
        /// Determines if a log file exists for the specified pay statement.
        /// </summary>
        /// <param name="documentNumber">Specifies the document number corresponding to the
        /// tax engine log.</param>
        /// <returns>True if the specified log file exists.</returns>
        public static bool LogExistsForDocumentNumber(string documentNumber)
        {
            string fullPath = TaxLoggingHelper.BuildFilePathForLog(documentNumber);

            return System.IO.File.Exists(fullPath);
        }

        /// <summary>
        /// Attempts to delete the specified log file.
        /// <param name="documentNumber">Specifies the document number corresponding to the
        /// tax engine log.</param>
        /// </summary>
        public static void DeleteLogForDocumentNumber(string documentNumber)
        {
            string fullPath = TaxLoggingHelper.BuildFilePathForLog(documentNumber);

            if (TaxLoggingHelper.LogExistsForDocumentNumber(documentNumber))
            {
                System.IO.File.Delete(fullPath);
            }
        }

        /// <summary>
        /// Builds the full path to the specified log file.
        /// </summary>
        /// <param name="documentNumber">Specifies the document number corresponding to the
        /// tax engine log.</param>
        /// <returns>The full path of the specified log.</returns>
        public static string BuildFilePathForLog(string documentNumber)
        {
            string logFilename = string.Concat(documentNumber, logFileExtension);

            // The path to the STE log folder relative to this assembly
            return Path.Combine(Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().Location), string.Concat(logDirectoryPath, logFilename));
        }

    }
}
